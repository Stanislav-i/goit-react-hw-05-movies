{"version":3,"file":"static/js/135.3940150c.chunk.js","mappings":"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","sources":["Services/api.js","webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '58fde9f9a3392c3dbee86a1f2142354e';\n\nexport const fetchTrendingData = async () => {\n  const data = await fetch(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  ).then(response => response.json());\n  return data;\n};\n\nexport const fetchMovieData = async (movieId) => {\n  const data = await fetch(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  ).then(response => response.json());\n  return data;\n};\n    \nexport const fetchReviewData = async movieId => {\n  const data = await fetch(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  ).then(response => response.json());\n  return data;\n};\n\nexport const fetchCastData = async movieId => {\n  const data = await fetch(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  ).then(response => response.json());\n  return data;\n};\n\nexport const fetchSearchedData = async movieTitle => {\n  const data = await fetch(\n    `${BASE_URL}/search/movie?query=${movieTitle}&api_key=${API_KEY}`\n  ).then(response => response.json());\n  return data;\n};","// extracted by mini-css-extract-plugin\nexport default {\"movieInfo\":\"MovieDetails_movieInfo__4EKMk\",\"infoList\":\"MovieDetails_infoList__KylaC\",\"title\":\"MovieDetails_title__cUGs9\",\"score\":\"MovieDetails_score__p8Kk2\",\"overview\":\"MovieDetails_overview__U5Vnb\",\"genres\":\"MovieDetails_genres__Pnmgt\",\"addInfoContainer\":\"MovieDetails_addInfoContainer__Rsjvd\",\"link\":\"MovieDetails_link__U+v+7\",\"linkContainer\":\"MovieDetails_linkContainer__MEWoT\",\"button\":\"MovieDetails_button__uXZxd\",\"addInfo\":\"MovieDetails_addInfo__lKFr+\"};","import { useParams, Link, Route, Routes, useLocation } from 'react-router-dom';\nimport { useState, useEffect, useRef, Suspense, lazy } from 'react';\nimport { fetchMovieData } from 'Services/api';\nimport { ProgressBar } from 'react-loader-spinner';\nimport css from './MovieDetails.module.css';\n\nconst CastList = lazy(() => import('components/CastList/CastList'));\nconst ReviewsList = lazy(() => import('components/ReviewList/ReviewsList'));\n\nconst MovieDetails = () => {\n  const { id } = useParams();\n  const [movieTitle, setMovieTitle] = useState('');\n  const [moviePoster, setMoviePoster] = useState('');\n  const [score, setScore] = useState(null);\n  const [overview, setOverview] = useState('');\n  const [genres, setGenres] = useState([]);\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n  const previousLocation = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        setIsLoading(true);\n        await fetchMovieData(id).then(data => {\n          setMovieTitle(data.title);\n          setMoviePoster(data.poster_path);\n          setScore(data.vote_average.toFixed(1));\n          setOverview(data.overview);\n          setGenres(data.genres);\n        });\n      } catch (error) {\n        console.log(error.message);\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    // async function fetchMovieDetails(movieId) {\n    //   await fetch(\n    //     `https://api.themoviedb.org/3/movie/${movieId}?api_key=58fde9f9a3392c3dbee86a1f2142354e`\n    //   )\n    //     .then(response => response.json())\n    //     .then(movie => {\n    //       // console.log(movie);\n\n    //       setMovieTitle(movie.title);\n    //       setMoviePoster(movie.poster_path);\n    //       setScore(movie.vote_average);\n    //       setOverview(movie.overview);\n    //       setGenres(movie.genres);\n    //     });\n    // }\n\n    fetchMovieDetails();\n  }, [id]);\n\n  return (\n    <div>\n      <button className={css.button}>\n        <Link to={previousLocation.current}>Go Back</Link>\n      </button>\n\n      {isLoading && (\n        <ProgressBar\n          height=\"80\"\n          width=\"80\"\n          ariaLabel=\"progress-bar-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"progress-bar-wrapper\"\n          borderColor=\"#F4442E\"\n          barColor=\"#51E5FF\"\n        />\n      )}\n\n      {error ? (\n        <p>\n          Something went wrong... Please, try again later.\n          <br />\n          Error is: {error}\n        </p>\n      ) : (\n        <>\n          <div className={css.movieInfo}>\n            {/* <div\n              style={{\n                width: '200px',\n                height: 'auto',\n                backgroundImage:\n                    `url(https://image.tmdb.org/t/p/w342${moviePoster})`,\n                  backgroundSize: 'contain',\n                  backgroundRepeat: 'no-repeat'\n              }}\n            ></div> */}\n            <div className={css.imageThumb}>\n              <img\n                className={css.image}\n                src={`https://image.tmdb.org/t/p/w342${moviePoster}`}\n                alt=\"\"\n              />\n            </div>\n            <div className={css.infoContainer}>\n              <h2 className={css.title}>{movieTitle}</h2>\n              <p className={css.score}>User Score: {score}%</p>\n              <h3 className={css.overview}>Overview</h3>\n              <p>{overview}</p>\n              <h3 className={css.genres}>Genres</h3>\n              <ul className={css.infoList}>\n                {genres.map(({ id, name }) => (\n                  <li key={id}>{name}</li>\n                ))}\n              </ul>\n            </div>\n          </div>\n          <p className={css.addInfo}>Additional information</p>\n\n          <div className={css.addInfoContainer}>\n            <button className={css.linkContainer}>\n              <Link className={css.link} to=\"cast\">\n                Cast\n              </Link>\n            </button>\n            <button className={css.linkContainer}>\n              <Link className={css.link} to=\"reviews\">\n                Reviews\n              </Link>\n            </button>\n          </div>\n\n          <Suspense\n            fallback={\n              <ProgressBar\n                height=\"80\"\n                width=\"80\"\n                ariaLabel=\"progress-bar-loading\"\n                wrapperStyle={{}}\n                wrapperClass=\"progress-bar-wrapper\"\n                borderColor=\"#F4442E\"\n                barColor=\"#51E5FF\"\n              />\n            }\n          >\n            <Routes>\n              <Route path=\"cast\" element={<CastList movieId={id} />}></Route>\n              <Route\n                path=\"reviews\"\n                element={<ReviewsList movieId={id} />}\n              ></Route>\n            </Routes>\n          </Suspense>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["BASE_URL","API_KEY","fetchTrendingData","fetch","then","response","json","data","fetchMovieData","movieId","fetchReviewData","fetchCastData","fetchSearchedData","movieTitle","CastList","lazy","ReviewsList","id","useParams","useState","setMovieTitle","moviePoster","setMoviePoster","score","setScore","overview","setOverview","genres","setGenres","error","setError","isLoading","setIsLoading","location","useLocation","previousLocation","useRef","state","from","useEffect","fetchMovieDetails","title","poster_path","vote_average","toFixed","console","log","message","className","css","to","current","height","width","ariaLabel","wrapperStyle","wrapperClass","borderColor","barColor","src","alt","map","name","Suspense","fallback","path","element","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}