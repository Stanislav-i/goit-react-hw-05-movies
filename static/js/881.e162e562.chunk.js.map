{"version":3,"file":"static/js/881.e162e562.chunk.js","mappings":"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","sources":["Services/api.js","webpack://react-homework-template/./src/components/MovieItem/MovieItem.module.css?431a","components/MovieItem/MovieItem.jsx","webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '58fde9f9a3392c3dbee86a1f2142354e';\n\nexport const fetchTrendingData = async () => {\n  const data = await fetch(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  ).then(response => response.json());\n  return data;\n};\n\nexport const fetchMovieData = async (movieId) => {\n  const data = await fetch(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  ).then(response => response.json());\n  return data;\n};\n    \nexport const fetchReviewData = async movieId => {\n  const data = await fetch(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  ).then(response => response.json());\n  return data;\n};\n\nexport const fetchCastData = async movieId => {\n  const data = await fetch(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  ).then(response => response.json());\n  return data;\n};\n\nexport const fetchSearchedData = async movieTitle => {\n  const data = await fetch(\n    `${BASE_URL}/search/movie?query=${movieTitle}&api_key=${API_KEY}`\n  ).then(response => response.json());\n  return data;\n};","// extracted by mini-css-extract-plugin\nexport default {\"trendingContainer\":\"MovieItem_trendingContainer__o5Ptp\",\"imageThumb\":\"MovieItem_imageThumb__iHbFt\",\"poster\":\"MovieItem_poster__2QxTy\",\"title\":\"MovieItem_title__JQYXo\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from './MovieItem.module.css';\n\nconst PH_IMAGE =\n  'https://cdn.pixabay.com/photo/2019/04/24/21/55/cinema-4153289_1280.jpg';\n\nconst MovieItem = ({ id, title, poster }) => {\n  const location = useLocation();\n\n  return (\n    //   <div className={css.trendingContainer}>\n    <Link\n      state={{ from: location }}\n      className={css.trendingContainer}\n      to={`/movies/${id}`}\n    >\n      <div className={css.imageThumb}>\n        <img\n          className={css.poster}\n          src={poster ? `https://image.tmdb.org/t/p/w300${poster}` : PH_IMAGE}\n          alt=\"movie poster\"\n        />\n      </div>\n      <div className={css.title}>\n        <li>{title}</li>\n      </div>\n    </Link>\n    //   </div>\n  );\n};\n\nMovieItem.propTypes = {\n  id: PropTypes.number,\n  title: PropTypes.string,\n  poster: PropTypes.string,\n};\n\nexport default MovieItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Movies_form__4ow+Z\",\"btn\":\"Movies_btn__TlfBQ\"};","import { useSearchParams } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\nimport { ProgressBar } from 'react-loader-spinner';\nimport { fetchSearchedData } from 'Services/api';\nimport MovieItem from 'components/MovieItem/MovieItem';\nimport css from './Movies.module.css';\n\nconst Movies = () => {\n  const [searchedMovies, setSearchedMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const [falseSearch, setFalseSearch] = useState(false);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('query');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const searchQuery = e.target.elements.searchInput.value;\n\n    setSearchParams({\n      query: searchQuery,\n    });\n\n    e.currentTarget.reset();\n  };\n\n  useEffect(() => {\n    if (!movieName) return;\n\n    const fetchSearchedMovies = async () => {\n      try {\n        setIsLoading(true);\n        await fetchSearchedData(movieName).then(data => {\n          if (data.results.length === 0) {\n            setSearchedMovies([]);\n            setFalseSearch(true);\n            return;\n          }\n          setFalseSearch(false);\n          setSearchedMovies(data.results);\n        });\n      } catch (error) {\n        console.log(error.message);\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchSearchedMovies();\n  }, [movieName, falseSearch]);\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit} className={css.form}>\n        <input\n          type=\"text\"\n          name=\"searchInput\"\n          placeholder=\"Search movies\"\n          required\n          minLength={3}\n        />\n        <button className={css.btn} type=\"submit\">\n          Search\n        </button>\n      </form>\n\n      {isLoading && (\n        <ProgressBar\n          height=\"80\"\n          width=\"80\"\n          ariaLabel=\"progress-bar-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"progress-bar-wrapper\"\n          borderColor=\"#F4442E\"\n          barColor=\"#51E5FF\"\n        />\n      )}\n\n      {falseSearch && <p>There are no movies matching your request!</p>}\n\n      <ul>\n        {error ? (\n          <p>\n            Something went wrong... Please, try again later.\n            <br />\n            Error is: {error}\n          </p>\n        ) : (\n          searchedMovies.map(({ id, title, backdrop_path }) => (\n            <MovieItem key={id} id={id} title={title} poster={backdrop_path} />\n          ))\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default Movies;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["BASE_URL","API_KEY","fetchTrendingData","fetch","then","response","json","data","fetchMovieData","movieId","fetchReviewData","fetchCastData","fetchSearchedData","movieTitle","id","title","poster","location","useLocation","state","from","className","css","to","src","alt","useState","searchedMovies","setSearchedMovies","isLoading","setIsLoading","error","setError","falseSearch","setFalseSearch","useSearchParams","searchParams","setSearchParams","movieName","get","useEffect","fetchSearchedMovies","results","length","console","log","message","onSubmit","e","preventDefault","searchQuery","target","elements","searchInput","value","query","currentTarget","reset","type","name","placeholder","required","minLength","height","width","ariaLabel","wrapperStyle","wrapperClass","borderColor","barColor","map","backdrop_path","MovieItem","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}